---
apiVersion: v1
kind: ConfigMap
metadata:
  name: chaos-mesh-2.1.3-d2iq-defaults
  namespace: ${releaseNamespace}
data:
  values.yaml: |
    ---
    enableProfiling: true
    enableCtrlServer: true
    clusterScoped: true
    controllerManager:
      hostNetwork: false
      serviceAccount: chaos-controller-manager
      replicaCount: 3
      env:
        WEBHOOK_PORT: 9443
        METRICS_PORT: 10080
      targetNamespace: ${releaseNamespace}
    chaosDaemon:
      runtime: containerd
      socketPath: /run/containerd/containerd.sock
      grpcPort: 31767
      httpPort: 31766
      hostNetwork: false
      privileged: true
      serviceAccount: chaos-daemon
      podSecurityPolicy: false
    dashboard:
      securityMode: true
      rootUrl: http://localhost:2333
      create: true
      hostNetwork: false
      replicaCount: 1
      serviceAccount: chaos-controller-manager
      securityMode: false
      gcpSecurityMode: false
      service:
        type: ClusterIP
      persistentVolume:
        enabled: false
        size: 20Gi
      env:
        LISTEN_HOST: "0.0.0.0"
        LISTEN_PORT: 2333
        METRIC_HOST: "0.0.0.0"
        METRIC_PORT: 2334
      ingress:
        annotations:
          kubernetes.io/ingress.class: kommander-traefik
          ingress.kubernetes.io/auth-response-headers: X-Forwarded-User
          traefik.ingress.kubernetes.io/router.tls: "true"
          traefik.ingress.kubernetes.io/router.middlewares: "${workspaceNamespace}-stripprefixes@kubernetescrd,${workspaceNamespace}-forwardauth@kubernetescrd"
        hosts:
          - paths:
              - "/dkp/chaosmesh/dashboard"
              - "/"
            tls: true
    dnsServer:
      create: false
    prometheus:
      create: false
    webhook:
      certManager:
        enabled: true
    bpfki:
      create: false
    chaosDlv:
      enable: false