displayName: Rook Ceph Cluster
description: Provides a replicated software defined storage cluster based on Ceph which is running directly in K8s and provides block, object and file storage.
category:
  - storage
type: platform
scope:
  - workspace
certifications:
  - certified
  - airgapped
overview: |-
  # Overview
  Ceph Cluster for Rook-Ceph, based on the Rook Ceph Operator

  ## What is Ceph?
  Ceph is a highly scalable distributed storage solution for block storage, object storage, and shared filesystems with years of production deployments.

  ## Design
  Rook enables Ceph storage to run on Kubernetes using Kubernetes primitives. With Ceph running in the Kubernetes cluster, Kubernetes applications can mount block devices and filesystems managed by Rook, or can use the S3/Swift API for object storage. The Rook operator automates configuration of storage components and monitors the cluster to ensure the storage remains available and healthy.
  The Rook operator is a simple container that has all that is needed to bootstrap and monitor the storage cluster. The operator will start and monitor Ceph monitor pods, the Ceph OSD daemons to provide RADOS storage, as well as start and manage other Ceph daemons. The operator manages CRDs for pools, object stores (S3/Swift), and filesystems by initializing the pods and other resources necessary to run the services.

  The operator will monitor the storage daemons to ensure the cluster is healthy. Ceph mons will be started or failed over when necessary, and other adjustments are made as the cluster grows or shrinks. The operator will also watch for desired state changes specified in the Ceph custom resources (CRs) and apply the changes.
  Rook automatically configures the Ceph-CSI driver to mount the storage to your pods.

  The rook/ceph image includes all necessary tools to manage the cluster. Rook is not in the Ceph data path. Many of the Ceph concepts like placement groups and crush maps are hidden so you donâ€™t have to worry about them. Instead Rook creates a simplified user experience for admins that is in terms of physical resources, pools, volumes, filesystems, and buckets. At the same time, advanced configuration can be applied when needed with the Ceph tools.
  Rook is implemented in golang. Ceph is implemented in C++ where the data path is highly optimized. We believe this combination offers the best of both worlds.

  ## Requirements
  Storage is build on (physical) disks. so this means you need disks in your worker nodes which can we used by Rook-Ceph.
  The minimum requirements is one (1) additional block storage disk per worker node which is not in use for any other usecase.
  NOTE: All data on this disks will be erased!

  ## More Information
  - [rook.io](https://www.rook.io/)
  - [Rook / Ceph Architecture](https://rook.io/docs/rook/v1.8/ceph-storage.html)
icon: PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHJvbGU9ImltZyIgdmlld0JveD0iLTUuMTkgLTUuNjkgMzMzLjM4IDUwMy44OCI+PHRpdGxlPlJvb2sgbG9nbzwvdGl0bGU+PHN0eWxlPnN2ZyB7ZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAzMjIuMSA0OTIuNn08L3N0eWxlPjxzdHlsZT4uc3Qwe2ZpbGw6IzAwOTFiZH08L3N0eWxlPjxnIGlkPSJMYXllcl8yIj48ZyBpZD0iTGF5ZXJfMS0yIj48cGF0aCBkPSJNMzE4LjYgMTIyLjloLTgyLjFWOTUuNWg1NC42VjMxLjZoLTQxLjd2MzYuM2gtNjcuNVYzMS42SDE0MXYzNi4zSDcxLjVWMzEuNkgzMi40djYzLjloNTIuOHYyNy40SDQuOVY0LjFIOTl2MzYuM2gxNC41VjQuMWg5NS45djM2LjNoMTIuNVY0LjFoOTYuN3ptLTI4LjIgNTEuNHYxNTFjLS4xIDE2LjEtMTMuMSAyOS4xLTI5LjIgMjkuMkg2Mi4xYy0xNi0uMS0yOS4xLTEzLjEtMjkuMS0yOS4ydi0xNTFoMjU3LjRtMjcuNS0yNy41SDUuNXYxNzguOWMuMyAzMS4xIDI1LjUgNTYuMSA1Ni42IDU2LjJoMTk5LjFjMzEuMi0uMSA1Ni42LTI1LjQgNTYuNi01Ni42VjE0Ni40bC4xLjR6IiBjbGFzcz0ic3QwIi8+PHBhdGggZD0iTTE2MS43IDIyOS41YzE2LjQuMSAyOS42IDEzLjMgMjkuNyAyOS43djMxLjZIMTMydi0zMS42Yy4xLTE2LjQgMTMuMy0yOS42IDI5LjctMjkuN20wLTI3LjRjLTMxLjYgMC01Ny4xIDI1LjYtNTcuMSA1Ny4xdjU4LjZoMTE0LjN2LTU4LjZjLS4xLTMxLjYtMjUuNi01Ny4xLTU3LjItNTcuMXoiIGNsYXNzPSJzdDAiLz48cGF0aCBmaWxsPSIjNTQ2YTc5IiBkPSJNMTMuNSA0ODcuOEg0Ljl2LTc1LjloMzYuM2MxNS42IDAgMjUuNSA5LjMgMjUuNSAyMy43cy05LjggMTkuNi0xOC4zIDIxLjVsMTkuOSAzMC42SDU4LjFsLTE4LjMtMjlIMTMuNXYyOS4xem0wLTM3LjJoMjYuMmM4LjIgMCAxOC40LTMuMSAxOC40LTE0LjkgMC05LjYtNy4yLTE1LjYtMTgtMTUuNkgxMy41djMwLjV6bTE0MC41LS43YzAgMjEuNS0xNS41IDM4LjgtMzguNSAzOC44Uzc3IDQ3MS40IDc3IDQ0OS45YzAtMjEuNSAxNS41LTM4LjggMzguNi0zOC44czM4LjQgMTcuMyAzOC40IDM4Ljh6bS04LjYgMGMwLTE3LjEtMTEuNS0zMC41LTMwLTMwLjVzLTI5LjggMTMuNC0yOS44IDMwLjUgMTEuNSAzMC41IDMwIDMwLjUgMjkuOC0xMy40IDI5LjgtMzAuNXptOTUuMyAwYzAgMjEuNS0xNS41IDM4LjgtMzguNSAzOC44cy0zOC41LTE3LjMtMzguNS0zOC44IDE1LjUtMzguOCAzOC41LTM4LjggMzguNSAxNy4zIDM4LjUgMzguOHptLTguNiAwYzAtMTcuMS0xMS41LTMwLjUtMzAtMzAuNXMtMzAgMTMuNC0zMCAzMC41YzAgMTcgMTEuNSAzMC41IDMwIDMwLjVzMzAtMTMuNCAzMC0zMC41em01MS44LTcuNGwzNC4xIDQ1LjNoLTEwLjhsLTI5LjctMzkuNS0xNS42IDE0Ljd2MjQuOWgtOC42di03Nmg4LjZ2MzkuNmw0Mi4yLTM5LjZoMTIuMWwtMzIuMyAzMC42eiIvPjwvZz48L2c+PC9zdmc+
